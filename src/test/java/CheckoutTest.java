// Generated by Selenium IDE

import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static java.lang.Thread.currentThread;
import static java.lang.Thread.sleep;
import static org.junit.Assert.assertEquals;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class CheckoutTest extends Hooks {

    public CheckoutPage checkoutPage;
    public WebDriverWait wait;

    @Before
    public void SetupPageObject() {
        checkoutPage = new CheckoutPage(driver);
        wait = new WebDriverWait(driver, 10);
    }

    @Test
    public void checkout() {
        checkoutPage.addItemToCart();
        checkoutPage.cartInfo();
        checkoutPage.assertTextWhenReady(checkoutPage.subTitle, "CHANGE METHOD");
        checkoutPage.fillInMandatoryFields();
        checkoutPage.continueButtons();
        checkoutPage.assertTextWhenReady(checkoutPage.subTitle, "THANK YOU FOR YOUR PURCHASE");

    }

    @Test
    public void checkoutAsALoggedInUserTest() {

    }

    @Test
    public void checkoutWithUpdatedQuantityTest() {
        checkoutPage.addItemToCart();
        checkoutPage.checkoutWithUpdatedQuantityTest();
        checkoutPage.cartInfo();
        checkoutPage.assertTextWhenReady(checkoutPage.subTitle, "CHANGE METHOD");
        checkoutPage.fillInMandatoryFields();
        checkoutPage.continueButtons();
        checkoutPage.assertTextWhenReady(checkoutPage.subTitle, "THANK YOU FOR YOUR PURCHASE");

    }

    @Test
    public void checkFirstNameMandatoryFieldsInCheckoutPageTest() {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.billingFirstName);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredFirstName, "This is the error");
    }

    @Test
    public void checkLastNameMandatoryFieldsInCheckoutPageTest() {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.billingLastName);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredLastName, "This is empty");
    }

    @Test
    public void checkAddressMandatoryFieldTest () {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.requiredAddress);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredAddress, "This is a required field");
    }

    @Test
    public void checkEmailMandatoryFieldTest () {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.requiredEmail);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredEmail, "This is a required field");
    }
    @Test
    public void checkCityMandatoryFieldTest () {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.requiredCity);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredCity, "This is a required field");
    }

    @Test
    public void checkRegionIdMandatoryFieldTest () {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.requiredRegionId);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredRegionId, "Please select an option");
    }

    @Test
    public void checkPostCodeMandatoryFieldTest () {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.requiredPostCode);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredPostCode, "This is a required field");
    }

    @Test
    public void checkTelephoneCodeMandatoryFieldTest () {
        checkoutPage.fillMandatoryFieldsExcept(checkoutPage.requiredTelephone);
        checkoutPage.assertTextWhenReady(checkoutPage.requiredTelephone, "This is a required field");
    }


}